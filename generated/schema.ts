// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  TypedMap,
  Entity,
  Value,
  ValueKind,
  store,
  Bytes,
  BigInt,
  BigDecimal
} from "@graphprotocol/graph-ts";

export class Bid extends Entity {
  constructor(id: string) {
    super();
    this.set("id", Value.fromString(id));
  }

  save(): void {
    let id = this.get("id");
    assert(id != null, "Cannot save Bid entity without an ID");
    if (id) {
      assert(
        id.kind == ValueKind.STRING,
        `Entities of type Bid must have an ID of type String but the id '${id.displayData()}' is of type ${id.displayKind()}`
      );
      store.set("Bid", id.toString(), this);
    }
  }

  static load(id: string): Bid | null {
    return changetype<Bid | null>(store.get("Bid", id));
  }

  get id(): string {
    let value = this.get("id");
    return value!.toString();
  }

  set id(value: string) {
    this.set("id", Value.fromString(value));
  }

  get amount(): BigInt | null {
    let value = this.get("amount");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set amount(value: BigInt | null) {
    if (!value) {
      this.unset("amount");
    } else {
      this.set("amount", Value.fromBigInt(<BigInt>value));
    }
  }

  get bidder(): Bytes | null {
    let value = this.get("bidder");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBytes();
    }
  }

  set bidder(value: Bytes | null) {
    if (!value) {
      this.unset("bidder");
    } else {
      this.set("bidder", Value.fromBytes(<Bytes>value));
    }
  }

  get createdAt(): i32 {
    let value = this.get("createdAt");
    return value!.toI32();
  }

  set createdAt(value: i32) {
    this.set("createdAt", Value.fromI32(value));
  }

  get auctionId(): BigInt | null {
    let value = this.get("auctionId");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set auctionId(value: BigInt | null) {
    if (!value) {
      this.unset("auctionId");
    } else {
      this.set("auctionId", Value.fromBigInt(<BigInt>value));
    }
  }

  get endTime(): BigInt | null {
    let value = this.get("endTime");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set endTime(value: BigInt | null) {
    if (!value) {
      this.unset("endTime");
    } else {
      this.set("endTime", Value.fromBigInt(<BigInt>value));
    }
  }
}

export class Auction extends Entity {
  constructor(id: string) {
    super();
    this.set("id", Value.fromString(id));
  }

  save(): void {
    let id = this.get("id");
    assert(id != null, "Cannot save Auction entity without an ID");
    if (id) {
      assert(
        id.kind == ValueKind.STRING,
        `Entities of type Auction must have an ID of type String but the id '${id.displayData()}' is of type ${id.displayKind()}`
      );
      store.set("Auction", id.toString(), this);
    }
  }

  static load(id: string): Auction | null {
    return changetype<Auction | null>(store.get("Auction", id));
  }

  get id(): string {
    let value = this.get("id");
    return value!.toString();
  }

  set id(value: string) {
    this.set("id", Value.fromString(value));
  }

  get bidCount(): BigInt | null {
    let value = this.get("bidCount");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set bidCount(value: BigInt | null) {
    if (!value) {
      this.unset("bidCount");
    } else {
      this.set("bidCount", Value.fromBigInt(<BigInt>value));
    }
  }

  get auctionId(): BigInt | null {
    let value = this.get("auctionId");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set auctionId(value: BigInt | null) {
    if (!value) {
      this.unset("auctionId");
    } else {
      this.set("auctionId", Value.fromBigInt(<BigInt>value));
    }
  }

  get creator(): Bytes | null {
    let value = this.get("creator");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBytes();
    }
  }

  set creator(value: Bytes | null) {
    if (!value) {
      this.unset("creator");
    } else {
      this.set("creator", Value.fromBytes(<Bytes>value));
    }
  }

  get createdAt(): i32 {
    let value = this.get("createdAt");
    return value!.toI32();
  }

  set createdAt(value: i32) {
    this.set("createdAt", Value.fromI32(value));
  }

  get updatedAt(): i32 {
    let value = this.get("updatedAt");
    return value!.toI32();
  }

  set updatedAt(value: i32) {
    this.set("updatedAt", Value.fromI32(value));
  }

  get sellToken(): Bytes | null {
    let value = this.get("sellToken");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBytes();
    }
  }

  set sellToken(value: Bytes | null) {
    if (!value) {
      this.unset("sellToken");
    } else {
      this.set("sellToken", Value.fromBytes(<Bytes>value));
    }
  }

  get sellTokenId(): BigInt | null {
    let value = this.get("sellTokenId");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set sellTokenId(value: BigInt | null) {
    if (!value) {
      this.unset("sellTokenId");
    } else {
      this.set("sellTokenId", Value.fromBigInt(<BigInt>value));
    }
  }

  get sellTokenValue(): BigInt | null {
    let value = this.get("sellTokenValue");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set sellTokenValue(value: BigInt | null) {
    if (!value) {
      this.unset("sellTokenValue");
    } else {
      this.set("sellTokenValue", Value.fromBigInt(<BigInt>value));
    }
  }

  get minimalPrice(): BigInt | null {
    let value = this.get("minimalPrice");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set minimalPrice(value: BigInt | null) {
    if (!value) {
      this.unset("minimalPrice");
    } else {
      this.set("minimalPrice", Value.fromBigInt(<BigInt>value));
    }
  }

  get data(): Bytes | null {
    let value = this.get("data");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBytes();
    }
  }

  set data(value: Bytes | null) {
    if (!value) {
      this.unset("data");
    } else {
      this.set("data", Value.fromBytes(<Bytes>value));
    }
  }

  get status(): string | null {
    let value = this.get("status");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set status(value: string | null) {
    if (!value) {
      this.unset("status");
    } else {
      this.set("status", Value.fromString(<string>value));
    }
  }

  get seller(): Bytes | null {
    let value = this.get("seller");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBytes();
    }
  }

  set seller(value: Bytes | null) {
    if (!value) {
      this.unset("seller");
    } else {
      this.set("seller", Value.fromBytes(<Bytes>value));
    }
  }

  get buyer(): Bytes | null {
    let value = this.get("buyer");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBytes();
    }
  }

  set buyer(value: Bytes | null) {
    if (!value) {
      this.unset("buyer");
    } else {
      this.set("buyer", Value.fromBytes(<Bytes>value));
    }
  }

  get protocolFee(): BigInt | null {
    let value = this.get("protocolFee");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set protocolFee(value: BigInt | null) {
    if (!value) {
      this.unset("protocolFee");
    } else {
      this.set("protocolFee", Value.fromBigInt(<BigInt>value));
    }
  }

  get endTime(): BigInt | null {
    let value = this.get("endTime");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set endTime(value: BigInt | null) {
    if (!value) {
      this.unset("endTime");
    } else {
      this.set("endTime", Value.fromBigInt(<BigInt>value));
    }
  }

  get buyAsset(): Bytes | null {
    let value = this.get("buyAsset");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBytes();
    }
  }

  set buyAsset(value: Bytes | null) {
    if (!value) {
      this.unset("buyAsset");
    } else {
      this.set("buyAsset", Value.fromBytes(<Bytes>value));
    }
  }

  get minimalStepBasePoint(): BigInt | null {
    let value = this.get("minimalStepBasePoint");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set minimalStepBasePoint(value: BigInt | null) {
    if (!value) {
      this.unset("minimalStepBasePoint");
    } else {
      this.set("minimalStepBasePoint", Value.fromBigInt(<BigInt>value));
    }
  }

  get logIndex(): string | null {
    let value = this.get("logIndex");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set logIndex(value: string | null) {
    if (!value) {
      this.unset("logIndex");
    } else {
      this.set("logIndex", Value.fromString(<string>value));
    }
  }

  get originFees(): BigInt | null {
    let value = this.get("originFees");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set originFees(value: BigInt | null) {
    if (!value) {
      this.unset("originFees");
    } else {
      this.set("originFees", Value.fromBigInt(<BigInt>value));
    }
  }

  get startTime(): BigInt | null {
    let value = this.get("startTime");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set startTime(value: BigInt | null) {
    if (!value) {
      this.unset("startTime");
    } else {
      this.set("startTime", Value.fromBigInt(<BigInt>value));
    }
  }

  get duration(): BigInt | null {
    let value = this.get("duration");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set duration(value: BigInt | null) {
    if (!value) {
      this.unset("duration");
    } else {
      this.set("duration", Value.fromBigInt(<BigInt>value));
    }
  }

  get buyoutPrice(): BigInt | null {
    let value = this.get("buyoutPrice");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set buyoutPrice(value: BigInt | null) {
    if (!value) {
      this.unset("buyoutPrice");
    } else {
      this.set("buyoutPrice", Value.fromBigInt(<BigInt>value));
    }
  }

  get auctionType(): string | null {
    let value = this.get("auctionType");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set auctionType(value: string | null) {
    if (!value) {
      this.unset("auctionType");
    } else {
      this.set("auctionType", Value.fromString(<string>value));
    }
  }
}
